// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protoFile.proto

package dbUpdate

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type ClientRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientRequest) Reset()         { *m = ClientRequest{} }
func (m *ClientRequest) String() string { return proto.CompactTextString(m) }
func (*ClientRequest) ProtoMessage()    {}
func (*ClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_protoFile_f1d06d5942afc537, []int{0}
}
func (m *ClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientRequest.Unmarshal(m, b)
}
func (m *ClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientRequest.Marshal(b, m, deterministic)
}
func (dst *ClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientRequest.Merge(dst, src)
}
func (m *ClientRequest) XXX_Size() int {
	return xxx_messageInfo_ClientRequest.Size(m)
}
func (m *ClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientRequest proto.InternalMessageInfo

func (m *ClientRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// The response message containing the greetings
type ServerReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerReply) Reset()         { *m = ServerReply{} }
func (m *ServerReply) String() string { return proto.CompactTextString(m) }
func (*ServerReply) ProtoMessage()    {}
func (*ServerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_protoFile_f1d06d5942afc537, []int{1}
}
func (m *ServerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerReply.Unmarshal(m, b)
}
func (m *ServerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerReply.Marshal(b, m, deterministic)
}
func (dst *ServerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerReply.Merge(dst, src)
}
func (m *ServerReply) XXX_Size() int {
	return xxx_messageInfo_ServerReply.Size(m)
}
func (m *ServerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerReply.DiscardUnknown(m)
}

var xxx_messageInfo_ServerReply proto.InternalMessageInfo

func (m *ServerReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ClientRequest)(nil), "dbUpdate.clientRequest")
	proto.RegisterType((*ServerReply)(nil), "dbUpdate.serverReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DbUpdateClient is the client API for DbUpdate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DbUpdateClient interface {
	// Client/Agent Starts
	CallServer(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ServerReply, error)
}

type dbUpdateClient struct {
	cc *grpc.ClientConn
}

func NewDbUpdateClient(cc *grpc.ClientConn) DbUpdateClient {
	return &dbUpdateClient{cc}
}

func (c *dbUpdateClient) CallServer(ctx context.Context, in *ClientRequest, opts ...grpc.CallOption) (*ServerReply, error) {
	out := new(ServerReply)
	err := c.cc.Invoke(ctx, "/dbUpdate.dbUpdate/callServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DbUpdateServer is the server API for DbUpdate service.
type DbUpdateServer interface {
	// Client/Agent Starts
	CallServer(context.Context, *ClientRequest) (*ServerReply, error)
}

func RegisterDbUpdateServer(s *grpc.Server, srv DbUpdateServer) {
	s.RegisterService(&_DbUpdate_serviceDesc, srv)
}

func _DbUpdate_CallServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DbUpdateServer).CallServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbUpdate.dbUpdate/CallServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DbUpdateServer).CallServer(ctx, req.(*ClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DbUpdate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dbUpdate.dbUpdate",
	HandlerType: (*DbUpdateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "callServer",
			Handler:    _DbUpdate_CallServer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protoFile.proto",
}

func init() { proto.RegisterFile("protoFile.proto", fileDescriptor_protoFile_f1d06d5942afc537) }

var fileDescriptor_protoFile_f1d06d5942afc537 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x77, 0xcb, 0xcc, 0x49, 0xd5, 0x03, 0xb3, 0x84, 0x38, 0x52, 0x92, 0x42, 0x0b, 0x52, 0x12,
	0x4b, 0x52, 0x95, 0x34, 0xb9, 0x78, 0x93, 0x73, 0x32, 0x53, 0xf3, 0x4a, 0x82, 0x52, 0x0b, 0x4b,
	0x53, 0x8b, 0x4b, 0x84, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x25, 0x18,
	0x15, 0x18, 0x35, 0x38, 0x83, 0x60, 0x5c, 0x25, 0x75, 0x2e, 0xee, 0xe2, 0xd4, 0xa2, 0xb2, 0xd4,
	0xa2, 0xa0, 0xd4, 0x82, 0x9c, 0x4a, 0xdc, 0x0a, 0x8d, 0xbc, 0xb8, 0xe0, 0xe6, 0x0b, 0xd9, 0x71,
	0x71, 0x25, 0x27, 0xe6, 0xe4, 0x04, 0x83, 0x35, 0x0a, 0x89, 0xeb, 0xc1, 0x24, 0xf4, 0x50, 0x6c,
	0x95, 0x12, 0x45, 0x48, 0x20, 0xd9, 0xa1, 0xc4, 0x90, 0xc4, 0x06, 0x76, 0xb0, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0xfd, 0x80, 0xae, 0x99, 0xc3, 0x00, 0x00, 0x00,
}
